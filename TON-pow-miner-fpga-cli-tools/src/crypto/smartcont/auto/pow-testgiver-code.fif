// automatically generated from `smartcont/stdlib.fc` `smartcont/pow-testgiver-code.fc` 
PROGRAM{
  DECLPROC recv_internal
  DECLPROC check_proof_of_work
  DECLPROC rescale_complexity
  DECLPROC ~update_params
  DECLPROC recv_external
  85143 DECLMETHOD seqno
  101616 DECLMETHOD get_pow_params
  78748 DECLMETHOD get_public_key
  recv_internal PROC:<{
    //  in_msg
    DROP	// 
  }>
  check_proof_of_work PROCREF:<{
    //  cs
    DUP	//  cs cs
    HASHSU	//  cs hash
    c4 PUSH	//  cs hash _4
    CTOS	//  cs hash ds
    64 LDU	//  cs hash _10 ds
    256 LDU	//  cs hash _10 _13 ds
    128 LDU	//  cs hash _10 _13 _16 ds
    256 LDU	//  cs hash stored_seqno_sw public_key seed pow_complexity ds
    s5 s1 XCPU	//  cs ds stored_seqno_sw public_key seed pow_complexity hash pow_complexity
    LESS	//  cs ds stored_seqno_sw public_key seed pow_complexity _23
    24 THROWIFNOT
    s0 s5 XCHG	//  pow_complexity ds stored_seqno_sw public_key seed cs
    32 LDU	//  pow_complexity ds stored_seqno_sw public_key seed _181 _180
    NIP	//  pow_complexity ds stored_seqno_sw public_key seed cs
    8 LDI	//  pow_complexity ds stored_seqno_sw public_key seed _35 cs
    32 LDU	//  pow_complexity ds stored_seqno_sw public_key seed _35 _38 cs
    256 LDU	//  pow_complexity ds stored_seqno_sw public_key seed _35 _38 _41 cs
    256 LDU	//  pow_complexity ds stored_seqno_sw public_key seed _35 _38 _41 _44 cs
    128 LDU	//  pow_complexity ds stored_seqno_sw public_key seed _35 _38 _41 _44 _47 cs
    256 LDU	//  pow_complexity ds stored_seqno_sw public_key seed flags expire whom rdata1 rseed rdata2 cs
    ENDS
    s0 s4 XCHG
    NOW	//  pow_complexity ds stored_seqno_sw public_key seed flags rdata2 whom rdata1 rseed expire _54
    SUB	//  pow_complexity ds stored_seqno_sw public_key seed flags rdata2 whom rdata1 rseed _55
    10 PUSHINT	//  pow_complexity ds stored_seqno_sw public_key seed flags rdata2 whom rdata1 rseed _55 _56=10
    UFITSX	//  pow_complexity ds stored_seqno_sw public_key seed flags rdata2 whom rdata1 rseed _57
    DROP	//  pow_complexity ds stored_seqno_sw public_key seed flags rdata2 whom rdata1 rseed
    s0 s5 XCHG2	//  pow_complexity ds stored_seqno_sw public_key rdata1 flags rdata2 whom rseed seed
    EQUAL	//  pow_complexity ds stored_seqno_sw public_key rdata1 flags rdata2 whom _59
    s4 s2 PUXC	//  pow_complexity ds stored_seqno_sw public_key rdata1 flags _59 whom rdata1 rdata2
    EQUAL	//  pow_complexity ds stored_seqno_sw public_key rdata1 flags _59 whom _60
    s1 s2 XCHG	//  pow_complexity ds stored_seqno_sw public_key rdata1 flags whom _59 _60
    AND	//  pow_complexity ds stored_seqno_sw public_key rdata1 flags whom _61
    25 THROWIFNOT
    ACCEPT
    LTIME
    ADDRAND
    s0 s2 XCHG	//  pow_complexity ds stored_seqno_sw public_key whom flags rdata1
    ADDRAND
    s0 s4 XCHG	//  pow_complexity flags stored_seqno_sw public_key whom ds
    32 LDU	//  pow_complexity flags stored_seqno_sw public_key whom _68 ds
    LDREF	//  pow_complexity flags stored_seqno_sw public_key whom last_success xdata ds
    ENDS
    DUP	//  pow_complexity flags stored_seqno_sw public_key whom last_success xdata xdata
    CTOS	//  pow_complexity flags stored_seqno_sw public_key whom last_success xdata ds
    LDGRAMS	//  pow_complexity flags stored_seqno_sw public_key whom last_success xdata _79 ds
    32 LDU	//  pow_complexity flags stored_seqno_sw public_key whom last_success xdata _79 _81 ds
    8 LDU	//  pow_complexity flags stored_seqno_sw public_key whom last_success xdata _79 _81 _84 ds
    8 LDU	//  pow_complexity flags stored_seqno_sw public_key whom last_success xdata amount target_delta min_cpl max_cpl ds
    ENDS
    NOW	//  pow_complexity flags stored_seqno_sw public_key whom last_success xdata amount target_delta min_cpl max_cpl _92
    s0 s6 XCHG2	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount target_delta min_cpl _92 last_success
    SUB	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount target_delta min_cpl delta
    DUP	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount target_delta min_cpl delta delta
    0 GTINT	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount target_delta min_cpl delta _95
    IF:<{	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount target_delta min_cpl delta
      ROT	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount min_cpl delta target_delta
      128 LSHIFT#DIVR	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount min_cpl factor
      297747071055821155530452781502797185024 PUSHINTX	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount min_cpl factor _103
      MAX	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount min_cpl _104
      382817662786055771396296433360739237888 PUSHINTX	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount min_cpl _104 _107
      MIN	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount min_cpl factor
      s1 s9 XCHG	//  min_cpl flags stored_seqno_sw public_key whom max_cpl xdata amount pow_complexity factor
      128 MULRSHIFTR#	//  min_cpl flags stored_seqno_sw public_key whom max_cpl xdata amount pow_complexity
      s0 s8 XCHG	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount min_cpl
      POW2	//  pow_complexity flags stored_seqno_sw public_key whom max_cpl xdata amount _114
      s1 s8 XCHG	//  amount flags stored_seqno_sw public_key whom max_cpl xdata pow_complexity _114
      MAX	//  amount flags stored_seqno_sw public_key whom max_cpl xdata _115
      s0 s2 XCHG	//  amount flags stored_seqno_sw public_key whom _115 xdata max_cpl
      POW2	//  amount flags stored_seqno_sw public_key whom _115 xdata _117
      s1 s2 XCHG	//  amount flags stored_seqno_sw public_key whom xdata _115 _117
      MIN	//  amount flags stored_seqno_sw public_key whom xdata pow_complexity
      s6 s6 XCHG2	//  pow_complexity flags stored_seqno_sw public_key whom amount xdata
    }>ELSE<{
      3 BLKDROP
      s2 POP	//  pow_complexity flags stored_seqno_sw public_key whom amount xdata
    }>
    NOW	//  pow_complexity flags stored_seqno_sw public_key whom amount xdata _119
    RANDU256	//  pow_complexity flags stored_seqno_sw public_key whom amount xdata _119 _120
    128 RSHIFT#	//  pow_complexity flags stored_seqno_sw public_key whom amount xdata _119 _122
    s0 s6 XCHG
    NEWC	//  pow_complexity flags _122 public_key whom amount xdata _119 stored_seqno_sw _123
    64 STU	//  pow_complexity flags _122 public_key whom amount xdata _119 _125
    s1 s5 XCHG	//  pow_complexity flags _122 _119 whom amount xdata public_key _125
    256 STU	//  pow_complexity flags _122 _119 whom amount xdata _127
    s1 s5 XCHG	//  pow_complexity flags xdata _119 whom amount _122 _127
    128 STU	//  pow_complexity flags xdata _119 whom amount _129
    s1 s6 XCHG	//  amount flags xdata _119 whom pow_complexity _129
    256 STU	//  amount flags xdata _119 whom _131
    s1 s2 XCHG	//  amount flags xdata whom _119 _131
    32 STU	//  amount flags xdata whom _133
    s1 s2 XCHG	//  amount flags whom xdata _133
    STREF	//  amount flags whom _134
    ENDC	//  amount flags whom _135
    c4 POP
    COMMIT
    0 PUSHINT	//  amount flags whom _138=0
    s2 PUSH	//  amount flags whom _138=0 flags
    2 RSHIFT#	//  amount flags whom _138=0 _140
    s0 s3 XCHG
    1 PUSHINT	//  amount _140 whom _138=0 flags _141=1
    AND	//  amount _140 whom _138=0 _142
    6 LSHIFT#	//  amount _140 whom _138=0 _144
    132 PUSHINT	//  amount _140 whom _138=0 _144 _145=132
    OR	//  amount _140 whom _138=0 _146
    NEWC	//  amount _140 whom _138=0 _146 _147
    9 STU	//  amount _140 whom _138=0 _149
    s1 s3 XCHG	//  amount _138=0 whom _140 _149
    8 STI	//  amount _138=0 whom _151
    256 STU	//  amount _138=0 _153
    ROT	//  _138=0 _153 amount
    STGRAMS	//  _138=0 _154
    107 STU	//  _168
    ENDC	//  _169
    3 PUSHINT	//  _169 _170=3
    SENDRAWMSG
  }>
  rescale_complexity PROCREF:<{
    //  cs
    32 LDU	//  _96 _95
    NIP	//  cs
    32 LDU	//  expire cs
    ENDS
    NOW	//  expire time
    s0 s1 PUSH2	//  expire time time expire
    GREATER	//  expire time _13
    28 THROWIFNOT
    c4 PUSH	//  expire time _16
    CTOS	//  expire time ds
    448 PUSHINT	//  expire time ds _27
    LDSLICEX	//  expire time _22 ds
    256 LDU	//  expire time _22 _29 ds
    32 LDU	//  expire time _22 _29 _32 ds
    LDREF	//  expire time skipped_data pow_complexity last_success xdata ds
    ENDS
    s5 s1 XCPU	//  xdata time skipped_data pow_complexity last_success expire last_success
    GREATER	//  xdata time skipped_data pow_complexity last_success _39
    29 THROWIFNOT
    s4 PUSH	//  xdata time skipped_data pow_complexity last_success xdata
    CTOS	//  xdata time skipped_data pow_complexity last_success ds
    LDGRAMS	//  xdata time skipped_data pow_complexity last_success _108 _107
    NIP	//  xdata time skipped_data pow_complexity last_success ds
    32 LDU	//  xdata time skipped_data pow_complexity last_success target_delta ds
    s5 s2 PUXC	//  xdata time skipped_data pow_complexity ds target_delta time last_success
    SUB	//  xdata time skipped_data pow_complexity ds target_delta delta
    OVER	//  xdata time skipped_data pow_complexity ds target_delta delta target_delta
    4 LSHIFT#	//  xdata time skipped_data pow_complexity ds target_delta delta _53
    s1 s(-1) PUXC	//  xdata time skipped_data pow_complexity ds target_delta delta delta _53
    GEQ	//  xdata time skipped_data pow_complexity ds target_delta delta _54
    30 THROWIFNOT
    ACCEPT
    s0 s2 XCHG	//  xdata time skipped_data pow_complexity delta target_delta ds
    8 LDU	//  xdata time skipped_data pow_complexity delta target_delta _112 _111
    NIP	//  xdata time skipped_data pow_complexity delta target_delta ds
    8 LDU	//  xdata time skipped_data pow_complexity delta target_delta max_cpl ds
    ENDS
    s2 s1 XCPU	//  xdata time skipped_data pow_complexity max_cpl target_delta delta target_delta
    128 LSHIFT#DIVR	//  xdata time skipped_data pow_complexity max_cpl target_delta factor
    s0 s2 XCHG	//  xdata time skipped_data pow_complexity factor target_delta max_cpl
    POW2	//  xdata time skipped_data pow_complexity factor target_delta max_complexity
    s0 s3 PUSH2	//  xdata time skipped_data pow_complexity factor target_delta max_complexity max_complexity pow_complexity
    128 LSHIFT#DIV	//  xdata time skipped_data pow_complexity factor target_delta max_complexity max_factor
    s3 PUSH	//  xdata time skipped_data pow_complexity factor target_delta max_complexity max_factor factor
    LESS	//  xdata time skipped_data pow_complexity factor target_delta max_complexity _79
    IF:<{	//  xdata time skipped_data pow_complexity factor target_delta max_complexity
      2 2 BLKDROP2	//  xdata time skipped_data target_delta _80
    }>ELSE<{	//  xdata time skipped_data pow_complexity factor target_delta max_complexity
      DROP	//  xdata time skipped_data pow_complexity factor target_delta
      -ROT	//  xdata time skipped_data target_delta pow_complexity factor
      128 MULRSHIFTR#	//  xdata time skipped_data target_delta _80
    }>	//  xdata time skipped_data target_delta pow_complexity
    s3 s3 XCHG2	//  xdata pow_complexity skipped_data time target_delta
    SUB	//  xdata pow_complexity skipped_data last_success
    NEWC
    ROT	//  xdata pow_complexity last_success _86 skipped_data
    STSLICER	//  xdata pow_complexity last_success _87
    s1 s2 XCHG	//  xdata last_success pow_complexity _87
    256 STU	//  xdata last_success _89
    32 STU	//  xdata _91
    STREF	//  _92
    ENDC	//  _93
    c4 POP
  }>
  ~update_params PROCREF:<{
    //  ds pref
    CTOS	//  ds cs
    8 LDU	//  ds reset_cpl cs
    s0 s2 XCHG	//  cs reset_cpl ds
    128 LDU	//  cs reset_cpl _11 ds
    256 LDU	//  cs reset_cpl _11 _46 _45
    DROP	//  cs reset_cpl seed pow_complexity
    s2 PUSH	//  cs reset_cpl seed pow_complexity reset_cpl
    IF:<{	//  cs reset_cpl seed pow_complexity
      DROP	//  cs reset_cpl seed
      ADDRAND
      POW2	//  cs pow_complexity
      RANDU256	//  cs pow_complexity _23
      128 RSHIFT#	//  cs pow_complexity seed
    }>ELSE<{
      s2 POP	//  cs pow_complexity seed
    }>
    NEWC	//  cs pow_complexity seed _27
    s0 s3 XCHG2	//  seed pow_complexity _27 cs
    STSLICER	//  seed pow_complexity _28
    ENDC	//  seed pow_complexity _29
    NOW	//  seed pow_complexity _29 _30
    s0 s3 XCHG
    NEWC	//  _30 pow_complexity _29 seed _31
    128 STU	//  _30 pow_complexity _29 _33
    s1 s2 XCHG	//  _30 _29 pow_complexity _33
    256 STU	//  _30 _29 _35
    s1 s2 XCHG	//  _29 _30 _35
    32 STU	//  _29 _37
    STREF	//  _38
    ENDC	//  c
    CTOS	//  _40
  }>
  recv_external PROC:<{
    //  in_msg
    DUP	//  in_msg in_msg
    32 PLDU	//  in_msg op
    DUP
    1298755173 PUSHINT	//  in_msg op op _4=1298755173
    EQUAL	//  in_msg op _5
    IFJMP:<{	//  in_msg op
      DROP	//  in_msg
      check_proof_of_work INLINECALLDICT
    }>	//  in_msg op
    1381196652 PUSHINT	//  in_msg op _7=1381196652
    EQUAL	//  in_msg _8
    IFJMP:<{	//  in_msg
      rescale_complexity INLINECALLDICT
    }>	//  in_msg
    9 PUSHPOW2	//  in_msg _12=512
    LDSLICEX	//  signature in_msg
    DUP	//  signature in_msg cs
    32 LDU	//  signature in_msg _18 cs
    32 LDU	//  signature in_msg _18 _21 cs
    32 LDU	//  signature in_msg subwallet_id valid_until msg_seqno cs
    s0 s2 XCHG
    NOW	//  signature in_msg subwallet_id cs msg_seqno valid_until _28
    LEQ	//  signature in_msg subwallet_id cs msg_seqno _29
    35 THROWIF
    c4 PUSH	//  signature in_msg subwallet_id cs msg_seqno _32
    CTOS	//  signature in_msg subwallet_id cs msg_seqno ds
    32 LDU	//  signature in_msg subwallet_id cs msg_seqno _37 ds
    32 LDU	//  signature in_msg subwallet_id cs msg_seqno _37 _40 ds
    256 LDU	//  signature in_msg subwallet_id cs msg_seqno stored_seqno stored_subwallet public_key ds
    s4 s3 XCPU	//  signature in_msg subwallet_id cs ds stored_seqno stored_subwallet public_key msg_seqno stored_seqno
    EQUAL	//  signature in_msg subwallet_id cs ds stored_seqno stored_subwallet public_key _47
    33 THROWIFNOT
    s5 s1 PUSH2	//  signature in_msg subwallet_id cs ds stored_seqno stored_subwallet public_key subwallet_id stored_subwallet
    EQUAL	//  signature in_msg subwallet_id cs ds stored_seqno stored_subwallet public_key _50
    s0 s6 XCHG	//  signature in_msg _50 cs ds stored_seqno stored_subwallet public_key subwallet_id
    0 EQINT	//  signature in_msg _50 cs ds stored_seqno stored_subwallet public_key _52
    s1 s6 XCHG	//  signature in_msg public_key cs ds stored_seqno stored_subwallet _50 _52
    OR	//  signature in_msg public_key cs ds stored_seqno stored_subwallet _53
    34 THROWIFNOT
    s0 s5 XCHG	//  signature stored_subwallet public_key cs ds stored_seqno in_msg
    HASHSU	//  signature stored_subwallet public_key cs ds stored_seqno _56
    s0 s6 s4 XC2PU	//  stored_seqno stored_subwallet public_key cs ds _56 signature public_key
    CHKSIGNU	//  stored_seqno stored_subwallet public_key cs ds _57
    35 THROWIFNOT
    ACCEPT
    SWAP	//  stored_seqno stored_subwallet public_key ds cs
    WHILE:<{
      DUP	//  stored_seqno stored_subwallet public_key ds cs cs
      SREFS	//  stored_seqno stored_subwallet public_key ds cs _62
    }>DO<{	//  stored_seqno stored_subwallet public_key ds cs
      LDREF	//  stored_seqno stored_subwallet public_key ds ref cs
      8 LDU	//  stored_seqno stored_subwallet public_key ds ref mode cs
      OVER
      8 PUSHPOW2DEC	//  stored_seqno stored_subwallet public_key ds ref mode cs mode _70=255
      LESS	//  stored_seqno stored_subwallet public_key ds ref mode cs _71
      IF:<{	//  stored_seqno stored_subwallet public_key ds ref mode cs
        -ROT	//  stored_seqno stored_subwallet public_key ds cs ref mode
        SENDRAWMSG
      }>ELSE<{	//  stored_seqno stored_subwallet public_key ds ref mode cs
        NIP	//  stored_seqno stored_subwallet public_key ds ref cs
        -ROT	//  stored_seqno stored_subwallet public_key cs ds ref
        ~update_params INLINECALLDICT	//  stored_seqno stored_subwallet public_key cs ds
        SWAP	//  stored_seqno stored_subwallet public_key ds cs
      }>
    }>	//  stored_seqno stored_subwallet public_key ds cs
    DROP	//  stored_seqno stored_subwallet public_key ds
    s0 s3 XCHG	//  ds stored_subwallet public_key stored_seqno
    INC	//  ds stored_subwallet public_key _76
    NEWC	//  ds stored_subwallet public_key _76 _77
    32 STU	//  ds stored_subwallet public_key _79
    s1 s2 XCHG	//  ds public_key stored_subwallet _79
    32 STU	//  ds public_key _81
    256 STU	//  ds _83
    SWAP	//  _83 ds
    STSLICER	//  _84
    ENDC	//  _85
    c4 POP
  }>
  seqno PROC:<{
    // 
    c4 PUSH	//  _0
    CTOS	//  _1
    32 PLDU	//  _3
  }>
  get_pow_params PROC:<{
    // 
    c4 PUSH	//  _1
    CTOS	//  _2
    320 PUSHINT	//  _2 _7
    SDSKIPFIRST	//  ds
    128 LDU	//  _12 ds
    256 LDU	//  _12 _15 ds
    PLDREF	//  seed pow_complexity xdata
    CTOS	//  seed pow_complexity ds
    LDGRAMS	//  seed pow_complexity _20 ds
    32 PLDU	//  seed pow_complexity _20 _23
  }>
  get_public_key PROC:<{
    // 
    c4 PUSH	//  _1
    CTOS	//  ds
    64 LDU	//  _11 _10
    NIP	//  ds
    256 PLDU	//  _9
  }>
}END>c
